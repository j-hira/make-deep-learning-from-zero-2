numpy axisについて 重要な概念
二次元の場合
axis=0 列方向
axis=1 行方向
これは配列の形状を支配している軸から順に0から与えられる
また関数中で引数として与えられた場合,その方向に次元圧縮される
基本的には次元が1下がるが,keepdimsすると次元がそのままになる.
支配しているの考え方
3次元配列で考えた場合,要素である2次元配列を1つの要素として考えたとき,1次元配列と考えることができるが,その方向が支配している軸.次に,その要素として考えた二次元配列の要素である1次元配列を1つの要素として考え,その二次元配列の方向が次に支配している軸...となる.


特異値分解
SVD 数学的な理解が必要？
次元削減の手法

<unknown>はレアな単語のこと
<eos> end of sentence

バッチ学習 一度にすべてのデータで学習する
ミニバッチ学習 一度に少量のデータで学習する

numpy スラッシング
a[3:2, 8:3]のような場合,左からaxis=0, 1...と割り当てられる.
例 contexts (6, 2, 7) の場合
contexts[:, 0] というのは,まず6が一番外側で支配しているため,左の : で指定されて,すべてを選択している.つぎに2が支配しているが,ここで 0が指定されているため,この2の0番目が指定されている.そして7については指定がない.よって,contexts[:, 0]は(6, 7)となる(keepdims=Trueの場合は,(6, 1, 7)となる)

オプティマイザー
勾配法について
https://qiita.com/tokkuman/items/1944c00415d129ca0ee9
SGDとの違いは,学習係数が固定でないこと？

x.array(x, y, z, ...)について
このときのサイズはaxis = 0, 1, 2, ...のサイズを順番に指定している
また x.shapeもこちらとどうように,axis = 0, 1, 2, ... のサイズを順番に指定している.よってベクトルの場合はそのサイズ,行列の場合は行, 列の順に取得することができる
